plugins {
    id "java"
    id "org.springframework.boot" version "3.5.3"
    id "io.spring.dependency-management" version "1.1.7"
    id "com.diffplug.spotless" version "7.1.0"
    id "net.nemerosa.versioning" version "3.1.0"
}

group = "io.github.malczuuu"

versioning {
    gitRepoRootDir = ".."
}

/**
 * Conditional approach to versioning. If `-Pversion=...` is specified on the command line, it will be used as the
 * version. Otherwise, the version is derived from the git tag and build number.
 */
if (project.hasProperty('version')) {
    version = project.property('version')
} else {
    def base = versioning.info.tag ?: "${versioning.info.lastTag}-${versioning.info.build}"
    version = base + (versioning.info.dirty ? "-dirty" : "")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

spotless {
    format "misc", {
        target "*.gradle", ".gitattributes", ".gitignore"

        trimTrailingWhitespace()
        leadingTabsToSpaces(4)
        endWithNewline()
    }

    format "yaml", {
        target "**/*.yml", "**/*.yaml"

        trimTrailingWhitespace()
        leadingTabsToSpaces(2)
        endWithNewline()
    }

    java {
        target "src/**/*.java"

        googleJavaFormat("1.27.0")
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io/" }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-validation")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.security:spring-security-test")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")

    implementation("com.auth0:java-jwt:4.5.0")
    implementation("io.github.malczuuu:problem4j-spring-web:3.1.0-rc2")

    testRuntimeOnly("com.h2database:h2:2.3.232")
}

/**
 * There's no need for a plain JAR.
 */
tasks.named("jar") {
    setEnabled(false)
}

tasks.named("test") {
    useJUnitPlatform()
}
